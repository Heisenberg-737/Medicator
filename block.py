import json
from web3 import Web3

ganache_url = "HTTP://127.0.0.1:8545"
web3 = Web3(Web3.HTTPProvider(ganache_url))

abi = json.loads('[ { "constant": false, "inputs": [ { "internalType": "address", "name": "_id", "type": "address" }, { "internalType": "string", "name": "_name", "type": "string" } ], "name": "addCenter", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "address", "name": "_companyAdd", "type": "address" }, { "internalType": "uint256", "name": "_id", "type": "uint256" }, { "internalType": "string", "name": "_name", "type": "string" }, { "internalType": "string", "name": "_mfgDate", "type": "string" }, { "internalType": "string", "name": "_expiry", "type": "string" } ], "name": "addmed", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "uint256", "name": "_id", "type": "uint256" }, { "internalType": "address", "name": "_medCenterId", "type": "address" } ], "name": "addmedToCenter", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "address", "name": "_id", "type": "address" } ], "name": "getMedCenterInfo", "outputs": [ { "internalType": "string", "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "uint256", "name": "_id", "type": "uint256" } ], "name": "getmedInfo", "outputs": [ { "internalType": "address", "name": "", "type": "address" }, { "internalType": "string", "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" } ]')

bytecode = "608060405234801561001057600080fd5b50610d2d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063137aba201461005c5780634a4757b81461026f57806388ae09201461032c578063a84d52ee1461037a578063f777b04314610454575b600080fd5b61026d600480360360a081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100b957600080fd5b8201836020820111156100cb57600080fd5b803590602001918460018302840111640100000000831117156100ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561015057600080fd5b82018360208201111561016257600080fd5b8035906020019184600183028401116401000000008311171561018457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101e757600080fd5b8201836020820111156101f957600080fd5b8035906020019184600183028401116401000000008311171561021b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061052f565b005b6102b16004803603602081101561028557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610657565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102f15780820151818401526020810190506102d6565b50505050905090810190601f16801561031e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103786004803603604081101561034257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c3565b005b6103a66004803603602081101561039057600080fd5b810190808035906020019092919050505061091b565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156104185780820151818401526020810190506103fd565b50505050905090810190601f1680156104455780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61052d6004803603604081101561046a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104a757600080fd5b8201836020820111156104b957600080fd5b803590602001918460018302840111640100000000831117156104db57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a88565b005b610537610b57565b6040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381525090506000819080600181540180825580915050906001820390600052602060002090600502016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610611929190610b9c565b50606082015181600301908051906020019061062e929190610b9c565b50608082015181600401908051906020019061064b929190610b9c565b50505050505050505050565b606060008090505b6001805490508110156107aa578273ffffffffffffffffffffffffffffffffffffffff166001828154811061069057fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561079d57600181815481106106eb57fe5b90600052602060002090600202016001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107905780601f1061076557610100808354040283529160200191610790565b820191906000526020600020905b81548152906001019060200180831161077357829003601f168201915b50505050509150506107be565b808060010191505061065f565b506040518060200160405280600081525090505b919050565b60008090505b600180549050811015610916578173ffffffffffffffffffffffffffffffffffffffff16600182815481106107fa57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610909576001818154811061085557fe5b9060005260206000209060020201600260008581526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201816001019080546001816001161561010002031660029004610904929190610c1c565b509050505b80806001019150506107c9565b505050565b6000606060008090505b600080549050811015610a6857836000828154811061094057fe5b9060005260206000209060050201600101541415610a5b576000818154811061096557fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600082815481106109a457fe5b9060005260206000209060050201600201808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4a5780601f10610a1f57610100808354040283529160200191610a4a565b820191906000526020600020905b815481529060010190602001808311610a2d57829003601f168201915b505050505090509250925050610a83565b8080600101915050610925565b50600080905060405180602001604052806000815250915091505b915091565b610a90610ca3565b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381525090506001819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610b4e929190610b9c565b50505050505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610bdd57805160ff1916838001178555610c0b565b82800160010185558215610c0b579182015b82811115610c0a578251825591602001919060010190610bef565b5b509050610c189190610cd3565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c555780548555610c92565b82800160010185558215610c9257600052602060002091601f016020900482015b82811115610c91578254825591600101919060010190610c76565b5b509050610c9f9190610cd3565b5090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b610cf591905b80821115610cf1576000816000905550600101610cd9565b5090565b9056fea265627a7a72315820b639bd1894e29e7922bc9a86a8cde866b52a6af12625c249815d9024f95799a164736f6c63430005110032"


Medd = web3.eth.contract(abi=abi, bytecode=bytecode)

web3.eth.defaultAccount = web3.eth.accounts[0]

tx1_hash = Medd.constructor().transact()
tx_receipt = web3.eth.waitForTransactionReceipt(tx1_hash)

contract = web3.eth.contract(address=tx_receipt.contractAddress, abi=abi)


def addmedicine(companyAdd, private_key, medicineId, medicineName, mfgDate, expiry):
    nonce = web3.eth.getTransactionCount(companyAdd)
    txn = contract.functions.addmed(web3.toChecksumAddress(companyAdd), medicineId, medicineName, mfgDate, expiry).buildTransaction({
        'chainId': 1,
        'gas': 700000,
        'gasPrice': web3.toWei('1', 'gwei'),
        'nonce': nonce
    })
    signed_txn=web3.eth.account.sign_transaction(txn, private_key=private_key)
    web3.eth.sendRawTransaction(signed_txn.rawTransaction)

def addCenter(medCenterId, name, private_key):
    nonce=web3.eth.getTransactionCount(medCenterId)

    txn=contract.functions.addCenter(web3.toChecksumAddress(medCenterId), name).buildTransaction({
        'chainId': 1,
        'gas': 700000,
        'gasPrice': web3.toWei('1', 'gwei'),
        'nonce': nonce
    })
    signed_txn=web3.eth.account.sign_transaction(txn, private_key=private_key)
    web3.eth.sendRawTransaction(signed_txn.rawTransaction)

def addmedicineToCenter(medicineId, medCenterId, private_key):

    nonce=web3.eth.getTransactionCount(medCenterId)

    txn=contract.functions.addmedToCenter(medicineId, medCenterId).buildTransaction({
        'chainId': 1,
        'gas': 700000,
        'gasPrice': web3.toWei('1', 'gwei'),
        'nonce': nonce
    })
    signed_txn=web3.eth.account.sign_transaction(txn, private_key=private_key)
    web3.eth.sendRawTransaction(signed_txn.rawTransaction)

def getMedCenterInfo(centerId):
    return contract.functions.getMedCenterInfo(web3.toChecksumAddress(centerId)).call()

def getmedicineInfo(medicineId):
    return contract.functions.getmedInfo(web3.toChecksumAddress(medicineId)).call()